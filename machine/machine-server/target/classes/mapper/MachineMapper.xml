<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server.mapper.MachineMapper">

  <!-- 通用查询映射结果 -->
  <resultMap id="BaseResultMap" type="com.example.server.pojo.Machine">
    <id column="id" property="id"/>
    <result column="purchase_order_id" property="purchaseOrderId"/>
    <result column="number" property="number"/>
    <result column="imei" property="imei"/>
    <result column="category_id" property="categoryId"/>
    <result column="brand_id" property="brandId"/>
    <result column="type" property="type"/>
    <result column="sku" property="sku"/>
    <result column="rank" property="rank"/>
    <result column="purchase_price" property="purchasePrice"/>
    <result column="sale_price" property="salePrice"/>
    <result column="describe" property="describe"/>
    <result column="stock_location" property="stockLocation"/>
    <result column="status_id" property="statusId"/>
    <result column="sale_channel_id" property="saleChannelId"/>
    <result column="operate_emp_id" property="operateEmpId"/>
    <result column="quality_inspector" property="qualityInspector"/>
    <result column="purchase_emp_id" property="purchaseEmpId"/>
    <result column="enter_storage_emp_id" property="enterStorageEmpId"/>
    <result column="bidding_date" property="biddingDate"/>
    <result column="enter_storage_date" property="enterStorageDate"/>
    <result column="out_storage_date" property="outStorageDate"/>
    <result column="out_storage_batch" property="outStorageBatch"/>
    <result column="comment" property="comment"/>
  </resultMap>

  <!-- 通用查询结果列 -->
  <sql id="Base_Column_List">
    id
    , purchase_order_id, enter_storage_receipt_id, `number`, imei, category_id, brand_id, type, sku, `rank`, purchase_price, sale_price, `describe`, stock_location, status_id, sale_channel_id, operate_emp_id, quality_inspector, purchase_emp_id, enter_storage_emp_id, bidding_date, enter_storage_date, out_storage_date, out_storage_batch, `comment`
  </sql>

  <update id="updateEnterStorageReceiptForOneKey">
    update t_machine as a
    set a.enter_storage_receipt_id = #{enterStorageReceipt.enterStorageOrder},
        a.status_id                = 2,
        a.enter_storage_date       = #{nowDateTime},
        a.enter_storage_emp_id     = #{empId}
    where a.purchase_order_id = #{purchaseOrderId}
  </update>

  <!--  获取采购单信息-->
  <select id="getPurchaseOrder" resultType="com.example.server.pojo.PurchaseOrderReceipt">
    select purchase_order, create_time, release_time, count(tm.id is not null or null) as 'sum',
    purchase_channel_id, sum(tm.purchase_price) as sum_price, count(status_id not in (1, 20, 21) or null) as
    'enter_purchase_count', count(status_id in (1, 21, 20) or null)
    as "not_enter_purchase_count", case when count((status_id != 1 and status_id != 21) or null) = 0 then 0 when
    count(status_id = 1 or status_id = 21 or null) = 0
    then 1 else 2 end as 'purchase_order_status', a.comment, a.operate_emp_id,
    sum(if(status_id = 1 or status_id = 21 or null, tm.purchase_price, 0)) as 'not_enter_purchase_price', is_release,
    case when count(status_id = 1 or null) = count(tm.id is not null or null) or is_release = 0 then 0 else 1 end as
    'is_delete'
    from (
    select *
    from t_purchase_order_receipt as a
    left join t_purchase_order_receipt_to_machine as b
    on a.purchase_order = b.receipt_id
    ) as a
    left join t_machine as tm
    on a.machine_id = tm.id
    group by purchase_order
    order by purchase_order Desc

    <!--
        select *
        from (
        select b.purchase_order, b.create_time, b.release_time, count(a.id is not null or null) as "sum",
        b.purchase_channel_id,
        sum(a.purchase_price) as
        sumPrice, count(a.status_id not in (1, 20, 21) or null) as "enter_purchase_count", count(a.status_id in (1, 21, 20)
        or null) as
        "not_enter_purchase_count", case when count((a.status_id != 1 and a.status_id != 21) or null) = 0 then 0 when
        count(a.status_id = 1 or a.status_id = 21 or null)
        = 0 then 1 else 2 end as "purchase_order_status", b.`comment`, b.operate_emp_id,
        sum(if(a.status_id = 1 or a.status_id = 21 or null, a.purchase_price, 0)) as not_enter_purchase_price, is_release,
        case when count(a.status_id = 1 or null) = count(a.id is not null or null) or is_release = 0 then 0 else 1 end as
        'is_delete'
        from t_machine as a
        right join t_purchase_order_receipt as b
        on a.purchase_order_id = b.purchase_order
        GROUP BY purchase_order
        having 1 = 1
        <if test="purchase.purchaseChannelId != null and purchase.purchaseChannelId != ''">
          and b.purchase_channel_id = #{purchase.purchaseChannelId}
        </if>
        <if test="purchase.purchaseOrder != null and purchase.purchaseOrder != ''">
          and b.purchase_order = #{purchase.purchaseOrder}
        </if>
        ) as c
        <if test="purchase.purchaseOrderStatus != null and purchase.purchaseOrderStatus != ''">
          where c.purchase_order_status = #{purchase.purchaseOrderStatus} - 1
        </if>
        <if test="purchase.operateEmpId != null and purchase.operateEmpId != ''">
          where c.operate_emp_id = #{purchase.operateEmpId}
        </if>
        order by purchase_order desc
    -->
  </select>

  <!--  获取入库单信息-->
  <select id="getEnterStorageReceipt" resultType="com.example.server.pojo.EnterStorageReceipt">
    select enter_storage_order, create_time, release_time, a.operate_emp_id, a.comment, count(machine_number is not null
    or null) as sum,
    sum(purchase_price) as sumPrice,
    case when is_release = 0 then 0 else 1 end as 'is_delete',
    case when count(tm.status_id = 2 or null) = count(tm.id is not null or null) and is_release = 1 then 0 else 1 end as
    'is_transfer',
    is_release,
    a.storage_location_id
    from (
    select *
    from t_enter_storage_receipt as a
    left join t_enter_storage_receipt_to_machine as b
    on a.enter_storage_order = b.receipt_id
    ) as a
    left join t_machine as tm
    on a.machine_id = tm.id
    group by enter_storage_order
    order by enter_storage_order Desc
    <!--
        select enter_storage_order, create_time,release_time,operate_emp_id, comment, count(a.enter_storage_receipt_id is
        not null or null) as
        sum,sum(a.purchase_price) as sumPrice,
        case when count(a.status_id = 2 or null) = count(a.id is not null or null) or is_release = 0 then 0 else 1 end as
        'is_delete',
        is_release, storage_location_id
        from (
        select enter_storage_receipt_id, purchase_price, status_id, id
        from t_machine as a
        where a.enter_storage_receipt_id != ''
        and a.enter_storage_receipt_id is not null
        <if test="enterStorageReceipt.enterStorageOrder != null and enterStorageReceipt.enterStorageOrder != ''">
          and a.enter_storage_receipt_id = #{enterStorageReceipt.enterStorageOrder}
        </if>
        ) as a
        right join t_enter_storage_receipt as b
        on a.enter_storage_receipt_id = b.enter_storage_order
        <if test="enterStorageReceipt.operateEmpId != null and enterStorageReceipt.operateEmpId != ''">
          and b.operate_emp_id = #{enterStorageReceipt.operateEmpId}
        </if>
        group by b.enter_storage_order
        order by b.enter_storage_order Desc
    -->
  </select>

  <!--  获取销退入库单信息-->
  <select id="getMarketReturnEnterStorageReceipt"
          resultType="com.example.server.pojo.MarketReturnEnterStorage">
    select id,
    create_time,release_time,operate_emp_id,
    comment,
    count(a.market_return_enter_storage_receipt_id is not null or null) as
    sum,
    sum(a.purchase_price) as sumPrice,
    is_release, storage_location_id
    from (
    select market_return_enter_storage_receipt_id, purchase_price
    from t_machine as a
    where a.market_return_enter_storage_receipt_id != ''
    and a.market_return_enter_storage_receipt_id is not null
    <if test="marketReturnEnterStorage.id != null and marketReturnEnterStorage.id != ''">
      and a.market_return_enter_storage_receipt_id = #{marketReturnEnterStorage.id}
    </if>
    ) as a
    right join t_market_return_enter_storage as b
    on a.market_return_enter_storage_receipt_id = b.id
    <if test="marketReturnEnterStorage.operateEmpId != null and marketReturnEnterStorage.operateEmpId != ''">
      and b.operate_emp_id = #{marketReturnEnterStorage.operateEmpId}
    </if>
    group by b.id
    order by b.id Desc
  </select>

  <!-- 获取上架入库单 -->
  <select id="getUpShelfEnterStorageReceipt" resultType="com.example.server.pojo.UpShelfEnterStorageReceipt">
    select id, create_time,release_time, operate_emp_id,
    comment,
    count(a.up_shelf_enter_storage_id is not null or null) as
    sum,
    sum(a.purchase_price) as sumPrice,
    is_release, storage_location_id
    from (
    select up_shelf_enter_storage_id, purchase_price
    from t_machine as a
    where a.up_shelf_enter_storage_id != ''
    and a.up_shelf_enter_storage_id is not null
    <if test="upShelfEnterStorageReceipt.id != null and upShelfEnterStorageReceipt.id != ''">
      and a.up_shelf_enter_storage_id = #{upShelfEnterStorageReceipt.id}
    </if>
    ) as a
    right join t_up_shelf_enter_storage_receipt as b
    on a.up_shelf_enter_storage_id = b.id
    <if test="upShelfEnterStorageReceipt.operateEmpId != null and upShelfEnterStorageReceipt.operateEmpId != ''">
      and b.operate_emp_id = #{upShelfEnterStorageReceipt.operateEmpId}
    </if>
    group by b.id
    order by b.id Desc
  </select>

  <!--  获取采购退货单信息-->
  <select id="getPurchaseReturnReceipt" resultType="com.example.server.pojo.PurchaseReturnReceipt">
    select purchase_return_order,create_time,release_time, operate_emp_id,
    count(b.purchase_return_receipt_id is not null or null) as 'sum',
    count(b.status_id = 12 or null) as 'return_and_not_send',
    count(b.status_id = 10 or null) as 'return_and_send',
    count(b.status_id = 11 or null) as 'return_and_proceeds',
    comment, is_release
    from (
    select a.purchase_return_receipt_id, a.status_id
    from t_machine as a
    where a.purchase_return_receipt_id != ''
    and a.purchase_return_receipt_id is not null
    <if test="purchaseReturnReceipt.purchaseReturnOrder != null and purchaseReturnReceipt.purchaseReturnOrder != ''">
      and a.purchase_return_receipt_id = #{purchaseReturnReceipt.purchaseReturnOrder}
    </if>
    ) as b
    right join t_purchase_return_receipt as c
    on b.purchase_return_receipt_id = c.purchase_return_order
    <if test="purchaseReturnReceipt.operateEmpId != null and purchaseReturnReceipt.operateEmpId != ''">
      and c.operate_emp_id = #{ purchaseReturnReceipt.operateEmpId}
    </if>
    group by c.purchase_return_order
    order by c.purchase_return_order desc
  </select>


  <!--  获取销售订单信息-->
  <select id="getMarketOrderReceipt" resultType="com.example.server.pojo.MarketOrderReceipt">
    select c.market_order,
    c.create_time, c.release_time, c.operate_emp_id,
    count(b.purchase_return_receipt_id is not null or null) as 'sum',
    sum(b.sale_price) as sale_sum_price,
    sum(b.purchase_price) as purchase_sum_price, is_release,channel_id ,c.comment as 'comment'
    from (
    select *
    from t_machine as a
    where a.market_order_id != ''
    and a.market_order_id is not null
    <if test="marketOrderReceipt.marketOrder != null and marketOrderReceipt.marketOrder != ''">
      and a.market_order_id = #{marketOrderReceipt.marketOrder}
    </if>
    ) as b
    right join t_market_order_receipt as c
    on b.market_order_id = c.market_order
    <if test="marketOrderReceipt.operateEmpId != null and marketOrderReceipt.operateEmpId != ''">
      and c.operate_emp_id = #{marketOrderReceipt.operateEmpId}
    </if>
    group by c.market_order
    order by c.market_order desc
  </select>

  <!--  获取销售退货订单信息-->
  <select id="getMarketReturnReceipt" resultType="com.example.server.pojo.MarketReturnReceipt">
    select c.market_return_order, c.create_time,c.release_time, c.operate_emp_id, count(b.market_return_receipt_id is
    not null or null) as sum,
    sum(b.sale_price) as sale_sum_price, is_release,c.comment
    from (
    select market_return_receipt_id, sale_price
    from t_machine as a
    where a.market_return_receipt_id != ''
    and a.market_return_receipt_id is not null
    <if test="marketReturnReceipt.marketReturnOrder != null and marketReturnReceipt.marketReturnOrder != ''">
      and a.market_return_receipt_id = #{marketReturnReceipt.marketReturnOrder}
    </if>
    ) as b
    right join t_market_return_receipt as c
    on b.market_return_receipt_id = c.market_return_order
    <if test="marketReturnReceipt.operateEmpId != null and marketReturnReceipt.operateEmpId != ''">
      and c.operate_emp_id = #{marketReturnReceipt.operateEmpId}
    </if>
    group by c.market_return_order
    order by c.market_return_order desc
  </select>

  <!-- 获取上架单据 -->
  <select id="getUpShelfReceipt" resultType="com.example.server.pojo.UpShelfReceipt">
    select up_shelf_order, up_shelf_date, comment, operate_emp_id, count(*) as sum
    from (
    select up_shelf_receipt_id
    from t_machine as a
    where a.up_shelf_receipt_id != ''
    and a.up_shelf_receipt_id is not null
    <if test="upShelfReceipt.upShelfOrder != null and upShelfReceipt.upShelfOrder != ''">
      and a.up_shelf_receipt_id = #{upShelfReceipt.upShelfOrder}
    </if>
    ) as a
    join t_up_shelf_receipt as b
    on a.up_shelf_receipt_id = b.up_shelf_order
    <if test="upShelfReceipt.operateEmpId null and upShelfReceipt.operateEmpId != ''">
      and b.operate_emp_id = #{upShelfReceipt.operateEmpId}
    </if>
    group by b.up_shelf_order
    order by b.up_shelf_order desc
  </select>

  <select id="getMachine" resultType="com.example.server.pojo.Machine">
    select a.*, b.purchase_channel_id, b.release_time as purchase_time
    from(
    select * from t_machine as a
    where 1 = 1
    <if test="machine.id != null and machine.id != ''">
      and a.id = #{machine.id}
    </if>
    <if test="machine.purchaseOrderId != null and machine.purchaseOrderId != ''">
      and a.purchase_order_id = #{machine.purchaseOrderId}
    </if>
    <if test="machine.enterStorageReceiptId != null and machine.enterStorageReceiptId != ''">
      and a.enter_storage_receipt_id = #{machine.enterStorageReceiptId}
    </if>
    <if test="machine.purchaseReturnReceiptId != null and machine.purchaseReturnReceiptId != ''">
      and a.purchase_return_receipt_id = #{machine.purchaseReturnReceiptId}
    </if>
    <if test="machine.marketReturnEnterStorageReceiptId != null and machine.marketReturnEnterStorageReceiptId != ''">
      and a.market_return_enter_storage_receipt_id = #{machine.marketReturnEnterStorageReceiptId}
    </if>
    <if test="machine.upShelfEnterStorageId != null and machine.upShelfEnterStorageId != ''">
      and a.up_shelf_enter_storage_id = #{machine.upShelfEnterStorageId}
    </if>
    <if test="machine.marketOrderId != null and machine.marketOrderId != ''">
      and a.market_order_id = #{machine.marketOrderId}
    </if>
    <if test="machine.marketReturnReceiptId != null and machine.marketReturnReceiptId != ''">
      and a.market_return_receipt_id = #{machine.marketReturnReceiptId}
    </if>
    <if test="machine.number != null and machine.number != ''">
      and a.number = #{machine.number}
    </if>
    <if test="machine.imei != null and machine.imei != ''">
      and a.imei like concat('%', #{machine.imei}, '%')
    </if>
    <if test="machine.categoryId != null and machine.categoryId != ''">
      and a.category_id = #{machine.categoryId}
    </if>
    <if test="machine.brandId != null and machine.brandId != ''">
      and a.brand_id = #{machine.brandId}
    </if>
    <if test="machine.isUpShelf != null and machine.isUpShelf != ''">
      and a.is_up_shelf = #{machine.isUpShelf}
    </if>
    <if test="machine.type != null and machine.type != ''">
      and a.type like concat('%', #{machine.type}, '%')
    </if>
    <if test="machine.sku != null and machine.sku != ''">
      and a.sku like concat('%', #{machine.sku}, '%')
    </if>
    <if test="machine.rank != null and machine.rank != ''">
      and a.rank like concat('%', #{machine.rank}, '%')
    </if>
    <if test="machine.storageLocationId != null and machine.storageLocationId != ''">
      and a.storage_location_id = #{machine.storageLocationId}
    </if>
    <if test="machine.describe != null and machine.describe != ''">
      and a.describe = #{machine.describe}
    </if>)as a
    left join t_purchase_order_receipt as b
    on a.purchase_order_id = b.purchase_order
    where 1 = 1
    <if test="machine.purchaseChannelId != null and machine.purchaseChannelId != ''">
      and b.purchase_channel_id = #{machine.purchaseChannelId}
    </if>
  </select>

</mapper>
